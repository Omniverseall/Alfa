
/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –±–æ—Ç
 * @param botToken –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞
 * @param chatId ID —á–∞—Ç–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param message –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
 * @returns Promise —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
export const sendTelegramMessage = async (
  botToken: string,
  chatId: string,
  message: string
): Promise<boolean> => {
  try {
    const url = `https://api.telegram.org/bot${botToken}/sendMessage`;
    const response = await fetch(url, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: "HTML",
      }),
    });

    const data = await response.json();
    return data.ok;
  } catch (error) {
    console.error("Error sending Telegram message:", error);
    return false;
  }
};

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏—ë–º –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
 */
export const formatAppointmentMessage = (formData: any): string => {
  return `
<b>üìã –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏—ë–º</b>

<b>–ò–º—è:</b> ${formData.firstName} ${formData.lastName}
<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${formData.phone}
<b>–í—Ä–∞—á:</b> ${formData.doctorName}
<b>–£—Å–ª—É–≥–∞:</b> ${formData.serviceName}
<b>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:</b> ${formData.formattedDate} –≤ ${formData.time}
${formData.comment ? `<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> ${formData.comment}` : ""}
`;
};

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
 */
export const formatFeedbackMessage = (formData: any, type: "review" | "question"): string => {
  if (type === "review") {
    return `
<b>‚≠ê –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤</b>

<b>–ò–º—è:</b> ${formData.name}
<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${formData.phone}
<b>Email:</b> ${formData.email || "–ù–µ —É–∫–∞–∑–∞–Ω"}
<b>–û—Ü–µ–Ω–∫–∞:</b> ${formData.rating}/5
<b>–¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞:</b> ${formData.text}
`;
  } else {
    return `
<b>‚ùì –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å</b>

<b>–ò–º—è:</b> ${formData.name}
<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${formData.phone}
<b>Email:</b> ${formData.email || "–ù–µ —É–∫–∞–∑–∞–Ω"}
<b>–í–æ–ø—Ä–æ—Å:</b> ${formData.question}
`;
  }
};
